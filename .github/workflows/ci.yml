name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install just
        uses: extractions/setup-just@v2

      - name: Create .env file
        run: |
          cp .env.example .env

      - name: Install dependencies
        run: uv sync --dev

      - name: Run all checks
        run: just check-all

  docker-build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cp .env.example .env

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image locally for testing
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: test-image
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker container
        run: |
          docker run --rm -e SERVICE_NAME=python-tool test-image python-tool health

      - name: Build and push to registry
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.title=${{ github.repository }}
            org.opencontainers.image.description=Python CLI tool template
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.version=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Make package public
        run: |
          sleep 10  # Wait for package to be created
          PACKAGE_NAME="${{ github.event.repository.name }}"
          echo "üîì Making package ghcr.io/${{ github.repository }}:* public..."
          
          # Try to make package public via API (try both user and org endpoints)
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/user/packages/container/$PACKAGE_NAME/visibility" \
            -f visibility='public' || \
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/orgs/${{ github.repository_owner }}/packages/container/$PACKAGE_NAME/visibility" \
            -f visibility='public' || \
          echo "‚ö†Ô∏è Package visibility may need to be set manually after first push"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
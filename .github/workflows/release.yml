name: Release and Deploy

on:
  push:
    tags:
      - 'v*'

env:
  GCP_SERVICE_NAME: gcp-python-uv
  GCP_ARTIFACT_REGISTRY_REPO: cloud-run-apps

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION_TAG=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build \
            --platform linux/amd64 \
            --tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ steps.version.outputs.VERSION }} \
            --tag ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:latest \
            .

      - name: Push Docker image
        run: |
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ steps.version.outputs.VERSION }}
          docker push ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.GCP_SERVICE_NAME }} \
            --image ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ steps.version.outputs.VERSION }} \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8080 \
            --set-env-vars VERSION=${{ steps.version.outputs.VERSION }}

      - name: Get Cloud Run URL
        id: deploy
        run: |
          URL=$(gcloud run services describe ${{ env.GCP_SERVICE_NAME }} \
            --region ${{ secrets.GCP_REGION }} \
            --format 'value(status.url)')
          echo "URL=$URL" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## ðŸš€ Deployment Info
            
            - **Version**: ${{ steps.version.outputs.VERSION }}
            - **Cloud Run URL**: ${{ steps.deploy.outputs.URL }}
            - **Region**: ${{ secrets.GCP_REGION }}
            
            ### Docker Image
            ```
            ${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.GCP_ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ steps.version.outputs.VERSION }}
            ```
            
            ---
            *Automated deployment to Google Cloud Run*